
import streamlit as st
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.pipeline import Pipeline

# Dados de treino (exemplo)
emails = [
    "Oferta especial! Compre agora",
    "Promo√ß√£o exclusiva para voc√™",
    "√öltima chance",
    "Grande oportunidade",
    "Oportunidade especial",
    "Basta clicar aqui",
    "Seu pr√™mio aguarda",
    "Documento solicitado",
    "Reuni√£o amanh√£ √†s 10h",
    "Prezado colaborador",
    "Relat√≥rio financeiro do trimestre"
]
labels = [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0]  # 1 = spam, 0 = n√£o spam

# Treinando o modelo com pipeline
modelo = Pipeline([
    ('vectorizer', CountVectorizer()),
    ('classifier', MultinomialNB())
])
modelo.fit(emails, labels)

# Interface com Streamlit
st.title("üîç Classificador de E-mails Spam")
st.write("Digite o conte√∫do de um e-mail abaixo:")

entrada = st.text_area("Texto do e-mail")

if st.button("Classificar"):
    if entrada.strip() == "":
        st.warning("Por favor, digite um e-mail para classificar.")
    else:
        resultado = modelo.predict([entrada])[0]
        prob = modelo.predict_proba([entrada])[0][1]

        if resultado == 1:
            st.error(f"üö® Este e-mail foi classificado como **SPAM** (confian√ßa: {prob:.2%})")
        else:
            st.success(f"‚úÖ Este e-mail **n√£o √© SPAM** (confian√ßa: {prob:.2%})")
