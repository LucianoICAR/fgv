
import streamlit as st
import pandas as pd
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.svm import SVC
from sklearn.pipeline import Pipeline
from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import StandardScaler
from sklearn.pipeline import make_pipeline

st.title("üîç Classificador de Cr√©dito com VSM + SVM")

st.markdown("""
Este app demonstra o uso do **Vector Space Model (VSM)** e do **Support Vector Machine (SVM)**  
para classificar transa√ß√µes como **normal** ou **fraude**.

üìå **Entradas do modelo**
- **Pa√≠s:** Local da transa√ß√£o (ex.: Brasil, EUA, Fran√ßa).
- **Canal:** Se foi online ou presencial.
- **Tipo:** Tipo da opera√ß√£o (compra, saque, pagamento).
- **Descri√ß√£o vetorial (VSM):** Texto formado por pa√≠s + canal + tipo.
- **Valor (R$):** O valor num√©rico da transa√ß√£o, normalizado para o modelo.

üìå **Como funciona?**
- O **VSM** transforma as informa√ß√µes textuais em vetores num√©ricos.
- O **SVM** encontra um **hiperplano** que separa as classes no espa√ßo vetorial.
- O hiperplano √© a fronteira com maior margem entre transa√ß√µes normais e fraudulentas.

üí° **Aplica√ß√£o no neg√≥cio:**  
Identifica√ß√£o autom√°tica de opera√ß√µes suspeitas, redu√ß√£o de fraudes e melhoria na seguran√ßa do cliente.
""")

# Dados fict√≠cios ampliados
dados = {
    "transacao": [
        "Brasil online compra", "EUA presencial saque", "Fran√ßa online pagamento",
        "Brasil online saque", "EUA presencial compra", "Fran√ßa online compra",
        "Brasil presencial pagamento", "EUA online saque", "Fran√ßa presencial compra",
        "Brasil presencial saque", "EUA online pagamento", "Fran√ßa presencial saque",
        "Brasil presencial compra", "EUA online compra", "Fran√ßa presencial saque",
        "Brasil online pagamento", "EUA online saque", "Fran√ßa online saque",
        "Brasil presencial saque", "EUA presencial pagamento", "Fran√ßa presencial compra",
        "Brasil online compra", "EUA online pagamento", "Fran√ßa presencial pagamento"
    ],
    "valor": [
        500, 10000, 800, 15000, 300, 2000, 1200, 9000, 400, 11000,
        8500, 9500, 250, 700, 10500, 900, 9500, 9800, 12000, 500,
        350, 600, 8700, 1300
    ],
    "classe": [
        "normal", "fraude", "normal", "fraude", "normal", "normal",
        "normal", "fraude", "normal", "fraude",
        "fraude", "fraude", "normal", "normal", "fraude",
        "normal", "fraude", "fraude", "fraude", "normal",
        "normal", "normal", "fraude", "normal"
    ]
}
df = pd.DataFrame(dados)

# Pipeline
text_pipe = Pipeline([
    ('vectorizer', CountVectorizer())
])

preprocess = ColumnTransformer([
    ('text', text_pipe, 'transacao'),
    ('scaler', StandardScaler(), ['valor'])
])

modelo = make_pipeline(
    preprocess,
    SVC(kernel='linear', probability=True)
)

modelo.fit(df, df['classe'])

# Interface
st.write("### Insira os dados da transa√ß√£o:")

pais = st.selectbox("Pa√≠s", ["Brasil", "EUA", "Fran√ßa"])
canal = st.selectbox("Canal", ["online", "presencial"])
tipo = st.selectbox("Tipo", ["compra", "saque", "pagamento"])
valor = st.number_input("Valor da transa√ß√£o (R$)", min_value=0.0, value=1000.0)

entrada_df = pd.DataFrame({
    "transacao": [f"{pais} {canal} {tipo}"],
    "valor": [valor]
})

if st.button("Classificar"):
    resultado = modelo.predict(entrada_df)[0]
    prob = modelo.predict_proba(entrada_df)[0]
    prob_dict = dict(zip(modelo.classes_, prob))
    confianca = prob_dict[resultado]

    st.write(f"üìù Transa√ß√£o: **{pais} {canal} {tipo}, R$ {valor:,.2f}**")

    if resultado == "fraude":
        st.error(f"üö® Esta transa√ß√£o foi classificada como **FRAUDE** com confian√ßa: {confianca:.2%}")
    else:
        st.success(f"‚úÖ Esta transa√ß√£o foi classificada como **NORMAL** com confian√ßa: {confianca:.2%}")

    if 0.45 <= confianca <= 0.55:
        st.warning("‚ö† **Aten√ß√£o:** Esta transa√ß√£o est√° em regi√£o de ambiguidade pr√≥xima ao hiperplano. A revis√£o manual pode ser recomendada.")

st.markdown("""
### üìà **Como o SVM funciona no VSM?**
- O **VSM** transforma o texto em um vetor no espa√ßo das palavras.
- O **SVM** encontra um hiperplano no espa√ßo vetorial (com o valor num√©rico inclu√≠do) que melhor separa as transa√ß√µes normais das fraudulentas.
- O hiperplano maximiza a margem entre os dois grupos, melhorando a generaliza√ß√£o do modelo.
""")
