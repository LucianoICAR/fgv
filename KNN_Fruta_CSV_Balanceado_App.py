
import streamlit as st
import pandas as pd
import numpy as np
from sklearn.neighbors import KNeighborsClassifier
import matplotlib.pyplot as plt

st.title("Classifica√ß√£o de Frutas para Exporta√ß√£o - KNN com Dados Balanceados")

st.markdown("""
Este app utiliza um dataset de frutas com vari√°veis balanceadas para aplicar **KNN (K-Nearest Neighbors)** e classificar frutas como:
- üçé **Aprovada para exporta√ß√£o**
- ‚ùå **Reprovada para exporta√ß√£o**

As vari√°veis s√£o:
- Peso da fruta (g)
- Di√¢metro da fruta (cm)
- Cor da casca (1 a 10)

Os dados s√£o carregados de um arquivo CSV balanceado.
""")

# Carregar o dataset
df = pd.read_csv("frutas_exportacao_balanceada.csv")
st.write("### Exemplo dos dados")
st.dataframe(df.head())

# K escolhido pelo usu√°rio
k = st.slider("Escolha o valor de K", min_value=1, max_value=15, value=5)

# Modelo
X = df[["Peso (g)", "Di√¢metro (cm)", "Cor (1-10)"]]
y = df["Aprovada"]

modelo = KNeighborsClassifier(n_neighbors=k)
modelo.fit(X, y)

# Gr√°fico: Peso vs Di√¢metro
st.write("### Distribui√ß√£o (Peso x Di√¢metro)")
fig1, ax1 = plt.subplots()
cores = ['red' if c == 0 else 'green' for c in y]
ax1.scatter(df["Peso (g)"], df["Di√¢metro (cm)"], c=cores, alpha=0.6)
ax1.set_xlabel("Peso (g)")
ax1.set_ylabel("Di√¢metro (cm)")
st.pyplot(fig1)

# Gr√°fico: Peso vs Cor
st.write("### Distribui√ß√£o (Peso x Cor)")
fig2, ax2 = plt.subplots()
ax2.scatter(df["Peso (g)"], df["Cor (1-10)"], c=cores, alpha=0.6)
ax2.set_xlabel("Peso (g)")
ax2.set_ylabel("Cor (1-10)")
st.pyplot(fig2)

# Entrada do usu√°rio
st.write("### Teste com nova fruta")
peso_input = st.number_input("Peso (g)", 50.0, 500.0, 200.0)
diametro_input = st.number_input("Di√¢metro (cm)", 3.0, 15.0, 8.0)
cor_input = st.number_input("Cor da casca (1 a 10)", 1.0, 10.0, 7.0)

nova_amostra = np.array([[peso_input, diametro_input, cor_input]])
pred = modelo.predict(nova_amostra)[0]

if pred == 1:
    st.success("üçé Esta fruta foi **Aprovada para exporta√ß√£o**!")
else:
    st.error("‚ùå Esta fruta foi **Reprovada para exporta√ß√£o**.")
