# app_fluxograma_ia.py

import streamlit as st

st.set_page_config(page_title="Escolha de Modelo de IA", page_icon="ğŸ¤–")

st.title("ğŸ¤– Escolha um Modelo de IA para o seu Problema de NegÃ³cio")

st.markdown("Responda Ã s perguntas abaixo para descobrir o tipo de modelo e algoritmo ideal.")

# Primeira pergunta
objetivo = st.radio(
    "Qual Ã© o objetivo do seu problema?",
    (
        "Prever um nÃºmero (valor contÃ­nuo)",
        "Classificar algo (sim/nÃ£o ou categorias)",
        "Encontrar padrÃµes em dados nÃ£o rotulados",
        "Aprender com tentativa e erro (reforÃ§o)"
    )
)

if objetivo == "Prever um nÃºmero (valor contÃ­nuo)":
    st.success("âœ… RecomendaÃ§Ã£o: Aprendizado Supervisionado - RegressÃ£o")
    st.info("ğŸ”§ Algoritmo sugerido: **RegressÃ£o Linear**")
    
elif objetivo == "Classificar algo (sim/nÃ£o ou categorias)":
    tipo_dados = st.radio(
        "Qual das situaÃ§Ãµes melhor descreve seu problema?",
        (
            "Preciso prever uma resposta binÃ¡ria (sim/nÃ£o)",
            "Meus dados sÃ£o categÃ³ricos e simbÃ³licos",
            "Quero classificar com base na proximidade entre exemplos",
            "Preciso de limites complexos entre as classes"
        )
    )
    
    st.success("âœ… RecomendaÃ§Ã£o: Aprendizado Supervisionado - ClassificaÃ§Ã£o")
    
    if tipo_dados == "Preciso prever uma resposta binÃ¡ria (sim/nÃ£o)":
        st.info("ğŸ”§ Algoritmo sugerido: **RegressÃ£o LogÃ­stica**")
    elif tipo_dados == "Meus dados sÃ£o categÃ³ricos e simbÃ³licos":
        st.info("ğŸ”§ Algoritmo sugerido: **NaÃ¯ve Bayes**")
    elif tipo_dados == "Quero classificar com base na proximidade entre exemplos":
        st.info("ğŸ”§ Algoritmo sugerido: **KNN (K-Nearest Neighbors)**")
    elif tipo_dados == "Preciso de limites complexos entre as classes":
        st.info("ğŸ”§ Algoritmo sugerido: **SVM (Support Vector Machine)**")
        
elif objetivo == "Encontrar padrÃµes em dados nÃ£o rotulados":
    tipo_padrao = st.radio(
        "O que vocÃª quer descobrir?",
        (
            "Agrupar itens semelhantes",
            "Encontrar regras de associaÃ§Ã£o entre itens"
        )
    )
    st.success("âœ… RecomendaÃ§Ã£o: Aprendizado NÃ£o-Supervisionado")
    if tipo_padrao == "Agrupar itens semelhantes":
        st.info("ğŸ”§ Algoritmo sugerido: **K-Means**")
    else:
        st.info("ğŸ”§ Algoritmo sugerido: **Apriori**")

elif objetivo == "Aprender com tentativa e erro (reforÃ§o)":
    st.success("âœ… RecomendaÃ§Ã£o: Aprendizado por ReforÃ§o")
    st.info("ğŸ”§ Algoritmo sugerido: **Q-Learning**")

st.markdown("---")
st.caption("Desenvolvido para apoio didÃ¡tico em cursos de IA aplicada aos negÃ³cios.")
